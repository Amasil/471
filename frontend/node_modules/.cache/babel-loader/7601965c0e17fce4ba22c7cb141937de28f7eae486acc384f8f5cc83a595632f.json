{"ast":null,"code":"var _jsxFileName = \"/Users/zainabwaseem/VS Code/471/frontend/src/Admin_Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Admin_Dashboard.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useParams, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AdminSidebar from \"./AdminSidebar.js\";\nimport \"./Admin_Dashboard.css\";\nimport UserDashboard from \"./User_Dashboard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin_Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(DashboardHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"user-dashboard\",\n          element: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"users/:action\",\n          element: /*#__PURE__*/_jsxDEV(UsersSection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Admin_Dashboard;\nconst DashboardHome = () => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Welcome to the Admin Dashboard!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_c2 = DashboardHome;\nconst UsersSection = () => {\n  _s();\n  let {\n    action\n  } = useParams();\n\n  // Render different components based on the route parameter\n  if (action === \"edit\") {\n    return /*#__PURE__*/_jsxDEV(EditUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else if (action === \"create\") {\n    return /*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else {\n    // Render other components or default view\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(UsersSection, \"1+U/reKVj3aenaJmC6WRy8Z/3NU=\", false, function () {\n  return [useParams];\n});\n_c3 = UsersSection;\nconst EditUser = () => {\n  _s2();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newUserInfo, setNewUserInfo] = useState({\n    User_ID: \"\",\n    First_Name: \"\",\n    Middle_Name: \"\",\n    Last_Name: \"\",\n    Username: \"\",\n    Password: \"\",\n    Email: \"\",\n    Phone_No: \"\",\n    Blood_Group: \"\",\n    Last_Donation_Date: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fetch the user data when the component mounts\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const userId = \"\";\n        const res = await axios.get(`http://localhost:3000/user/${userId}`);\n        setSelectedUser(res.data);\n\n        // Populate all the empty fields with the user's information\n        setNewUserInfo({\n          ...res.data,\n          First_Name: res.data.First_Name || \"\",\n          Middle_Name: res.data.Middle_Name || \"\",\n          Last_Name: res.data.Last_Name || \"\",\n          Username: res.data.Username || \"\",\n          Password: res.data.Password || \"\",\n          Email: res.data.Email || \"\",\n          Phone_No: res.data.Phone_No || \"\",\n          Blood_Group: res.data.Blood_Group || \"\",\n          Last_Donation_Date: res.data.Last_Donation_Date || \"\"\n        });\n      } catch (err) {\n        console.error(\"Error fetching user:\", err);\n      }\n    };\n    fetchUser();\n  }, []);\n  const handleChangeUserInfo = async () => {\n    // Filter out User_ID from the newUserInfo\n    const {\n      User_ID,\n      ...updatedInfo\n    } = newUserInfo;\n    try {\n      // Only send request if there are changes\n      if (JSON.stringify(updatedInfo) !== \"{}\") {\n        await axios.put(`http://localhost:3000/user/${User_ID}`, newUserInfo);\n        console.log(\"User info updated successfully!\");\n        // Redirect or navigate to user dashboard\n      } else {\n        console.log(\"No changes to update.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating user info:\", err);\n    }\n    setIsEditing(false); // Reset editing mode\n  };\n  const handleDeleteUser = async () => {\n    try {\n      if (selectedUser && selectedUser.User_ID) {\n        await axios.delete(`http://localhost:3000/user/${selectedUser.User_ID}`);\n        console.log(\"User deleted successfully!\");\n        // Redirect or navigate to user dashboard\n      } else {\n        console.log(\"No user selected to delete.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s2(EditUser, \"vrLc42vfyZn9if+bfDylEINRpVM=\");\n_c4 = EditUser;\nconst CreateUser = () => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Create User\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 10\n  }, this);\n};\n_c5 = CreateUser;\nexport default Admin_Dashboard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Admin_Dashboard\");\n$RefreshReg$(_c2, \"DashboardHome\");\n$RefreshReg$(_c3, \"UsersSection\");\n$RefreshReg$(_c4, \"EditUser\");\n$RefreshReg$(_c5, \"CreateUser\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","useParams","Navigate","axios","AdminSidebar","UserDashboard","jsxDEV","_jsxDEV","Admin_Dashboard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","DashboardHome","UsersSection","_c","_c2","_s","action","EditUser","CreateUser","_c3","_s2","selectedUser","setSelectedUser","newUserInfo","setNewUserInfo","User_ID","First_Name","Middle_Name","Last_Name","Username","Password","Email","Phone_No","Blood_Group","Last_Donation_Date","isEditing","setIsEditing","fetchUser","userId","res","get","data","err","console","error","handleChangeUserInfo","updatedInfo","JSON","stringify","put","log","handleDeleteUser","delete","_c4","_c5","$RefreshReg$"],"sources":["/Users/zainabwaseem/VS Code/471/frontend/src/Admin_Dashboard.js"],"sourcesContent":["// Admin_Dashboard.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useParams, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AdminSidebar from \"./AdminSidebar.js\";\nimport \"./Admin_Dashboard.css\";\nimport UserDashboard from \"./User_Dashboard.js\";\n\nconst Admin_Dashboard = () => {\n  return (\n    <div className=\"admin-dashboard\">\n      <AdminSidebar />\n      <div className=\"admin-content\">\n        <Routes>\n          <Route path=\"/\" element={<DashboardHome />} />\n          <Route path=\"user-dashboard\" element={<UserDashboard />} />\n          <Route path=\"users/:action\" element={<UsersSection />} />\n          {/* Add more routes as needed */}\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nconst DashboardHome = () => {\n  return <h2>Welcome to the Admin Dashboard!</h2>;\n};\n\nconst UsersSection = () => {\n  let { action } = useParams();\n\n  // Render different components based on the route parameter\n  if (action === \"edit\") {\n    return <EditUser />;\n  } else if (action === \"create\") {\n    return <CreateUser />;\n  } else {\n    // Render other components or default view\n    return <h2>User Section</h2>;\n  }\n};\n\nconst EditUser = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newUserInfo, setNewUserInfo] = useState({\n    User_ID: \"\",\n    First_Name: \"\",\n    Middle_Name: \"\",\n    Last_Name: \"\",\n    Username: \"\",\n    Password: \"\",\n    Email: \"\",\n    Phone_No: \"\",\n    Blood_Group: \"\",\n    Last_Donation_Date: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fetch the user data when the component mounts\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const userId = \"\"\n        const res = await axios.get(`http://localhost:3000/user/${userId}`);\n        setSelectedUser(res.data);\n\n        // Populate all the empty fields with the user's information\n        setNewUserInfo({\n          ...res.data,\n          First_Name: res.data.First_Name || \"\",\n          Middle_Name: res.data.Middle_Name || \"\",\n          Last_Name: res.data.Last_Name || \"\",\n          Username: res.data.Username || \"\",\n          Password: res.data.Password || \"\",\n          Email: res.data.Email || \"\",\n          Phone_No: res.data.Phone_No || \"\",\n          Blood_Group: res.data.Blood_Group || \"\",\n          Last_Donation_Date: res.data.Last_Donation_Date || \"\",\n        });\n      } catch (err) {\n        console.error(\"Error fetching user:\", err);\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  const handleChangeUserInfo = async () => {\n    // Filter out User_ID from the newUserInfo\n    const { User_ID, ...updatedInfo } = newUserInfo;\n\n    try {\n      // Only send request if there are changes\n      if (JSON.stringify(updatedInfo) !== \"{}\") {\n        await axios.put(`http://localhost:3000/user/${User_ID}`, newUserInfo);\n        console.log(\"User info updated successfully!\");\n        // Redirect or navigate to user dashboard\n      } else {\n        console.log(\"No changes to update.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating user info:\", err);\n    }\n\n    setIsEditing(false); // Reset editing mode\n  };\n\n  const handleDeleteUser = async () => {\n    try {\n      if (selectedUser && selectedUser.User_ID) {\n        await axios.delete(`http://localhost:3000/user/${selectedUser.User_ID}`);\n        console.log(\"User deleted successfully!\");\n        // Redirect or navigate to user dashboard\n      } else {\n        console.log(\"No user selected to delete.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Edit User Information</h2>\n      {/* Render form and buttons for editing */}\n    </div>\n  );\n};\n\nconst CreateUser = () => {\n  return <h2>Create User</h2>;\n};\n\nexport default Admin_Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}