{"ast":null,"code":"var _jsxFileName = \"/Users/amasil/Downloads/471/frontend/src/DoctorTransfusion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransfusionAppt = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [selectedVolume, setSelectedVolume] = useState(\"\");\n  const [selectedBloodType, setSelectedBloodType] = useState(\"\");\n  const [appointments, setAppointments] = useState([]);\n  const [selectedAppointmentID, setSelectedAppointmentID] = useState(null);\n  const [selectedRecipient, setSelectedRecipient] = useState(\"\");\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n\n  // Retrieve Doctor_ID and Recipient_ID from localStorage\n  const storedDoctorID = localStorage.getItem(\"userId\");\n  const storedRecipientID = localStorage.getItem(\"recipientId\");\n  useEffect(() => {\n    setSelectedDoctor(storedDoctorID || \"\");\n    setSelectedRecipient(storedRecipientID || \"\");\n  }, [storedDoctorID, storedRecipientID]);\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  };\n  const handleTimeChange = event => {\n    setSelectedTime(event.target.value);\n  };\n  const handleVolumeChange = event => {\n    setSelectedVolume(event.target.value);\n  };\n  const handleBloodTypeChange = event => {\n    setSelectedBloodType(event.target.value);\n  };\n  const handleRecipientChange = event => {\n    setSelectedRecipient(event.target.value);\n  };\n  const scheduleTransfusionAppointment = () => {\n    if (selectedDoctor.trim() !== \"\" && selectedRecipient.trim() !== \"\" && selectedDate.trim() !== \"\" && selectedTime.trim() !== \"\" && selectedVolume.trim() !== \"\" && selectedBloodType.trim() !== \"\") {\n      const currentDate = new Date();\n      const selectedAppointmentDate = new Date(selectedDate);\n\n      // Check if the selected date is in the future\n      if (selectedAppointmentDate <= currentDate) {\n        alert(\"Please select a future date for the appointment.\");\n        return;\n      }\n\n      // Continue with scheduling if the date is in the future\n      const appointmentData = {\n        Medical_ID: selectedDoctor,\n        Recipient_ID: selectedRecipient,\n        Status: \"Scheduled\",\n        Transfusion_date: selectedDate,\n        Transfusion_time: selectedTime,\n        Volume: selectedVolume,\n        Type: selectedBloodType\n      };\n      console.log(appointmentData);\n      fetch(\"http://localhost:3000/schedule-transfusion-appointment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(appointmentData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        const appointmentID = data && data.Transfusion_ID;\n        console.log(data);\n        if (appointmentID) {\n          setSelectedAppointmentID(appointmentID);\n          setAppointments(prevAppointments => [...prevAppointments, {\n            Appointment_ID: appointmentID,\n            Medical_ID: selectedDoctor,\n            Recipient_ID: selectedRecipient,\n            Status: \"Scheduled\",\n            Transfusion_date: selectedDate,\n            Transfusion_Time: selectedTime,\n            Volume: selectedVolume,\n            Type: selectedBloodType\n          }]);\n          setSelectedDate(\"\");\n          setSelectedTime(\"\");\n          setSelectedVolume(\"\");\n          setSelectedBloodType(\"\");\n          setSelectedRecipient(\"\");\n          alert(`Appointment scheduled successfully. Appointment ID: ${appointmentID}`);\n        } else {\n          throw new Error(\"Appointment ID not found in the response data\");\n        }\n      }).catch(error => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        alert(\"Error scheduling appointment. Please try again later.\");\n      });\n    }\n  };\n  useEffect(() => {\n    // Fetch appointment data when the component mounts\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      // Fetch appointments for the specific user\n      const response = await fetch(`http://localhost:3000/get-transfusion-appointments/${selectedDoctor}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error(\"Error fetching appointments:\", error);\n    }\n  };\n  const handleRefresh = () => {\n    // Fetch appointment data when the refresh button is clicked\n    fetchAppointments();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfusion-appt-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transfusion Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipient-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter the recipient ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedRecipient,\n        onChange: handleRecipientChange,\n        className: \"recipient-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a date for the transfusion appointment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        className: \"date-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a time for the transfusion appointment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: selectedTime,\n        onChange: handleTimeChange,\n        className: \"time-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volume-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Volume needed for transfusion in mL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedVolume,\n        onChange: handleVolumeChange,\n        className: \"volume-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blood-type-selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Blood type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedBloodType,\n        onChange: handleBloodTypeChange,\n        className: \"blood-type-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: selectedDoctor.trim() === \"\" || selectedRecipient.trim() === \"\" || selectedDate.trim() === \"\" || selectedTime.trim() === \"\" || selectedVolume.trim() === \"\" || selectedBloodType.trim() === \"\",\n      onClick: scheduleTransfusionAppointment,\n      children: \"Schedule Transfusion Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"3\",\n              children: \"Transfusion Appointments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"refresh-button\",\n                onClick: handleRefresh,\n                style: {\n                  width: \"100%\"\n                },\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Appointment ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Appointment Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Appointment Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Blood Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.Appointment_ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.Status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.Transfusion_date.split(\"T\")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.Transfusion_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.Volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, appointment.Appointment_ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(TransfusionAppt, \"nlu6kgOLoZUNt5V0nY3Ud1X1Z8o=\");\n_c = TransfusionAppt;\nexport default TransfusionAppt;\nvar _c;\n$RefreshReg$(_c, \"TransfusionAppt\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransfusionAppt","_s","selectedDate","setSelectedDate","selectedTime","setSelectedTime","selectedVolume","setSelectedVolume","selectedBloodType","setSelectedBloodType","appointments","setAppointments","selectedAppointmentID","setSelectedAppointmentID","selectedRecipient","setSelectedRecipient","selectedDoctor","setSelectedDoctor","storedDoctorID","localStorage","getItem","storedRecipientID","handleDateChange","event","target","value","handleTimeChange","handleVolumeChange","handleBloodTypeChange","handleRecipientChange","scheduleTransfusionAppointment","trim","currentDate","Date","selectedAppointmentDate","alert","appointmentData","Medical_ID","Recipient_ID","Status","Transfusion_date","Transfusion_time","Volume","Type","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","appointmentID","Transfusion_ID","prevAppointments","Appointment_ID","Transfusion_Time","catch","error","fetchAppointments","handleRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","onClick","colSpan","style","width","map","appointment","split","_c","$RefreshReg$"],"sources":["/Users/amasil/Downloads/471/frontend/src/DoctorTransfusion.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\n\nconst TransfusionAppt = () => {\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  const [selectedVolume, setSelectedVolume] = useState(\"\");\n  const [selectedBloodType, setSelectedBloodType] = useState(\"\");\n  const [appointments, setAppointments] = useState([]);\n  const [selectedAppointmentID, setSelectedAppointmentID] = useState(null);\n  const [selectedRecipient, setSelectedRecipient] = useState(\"\");\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\n\n  // Retrieve Doctor_ID and Recipient_ID from localStorage\n  const storedDoctorID = localStorage.getItem(\"userId\");\n  const storedRecipientID = localStorage.getItem(\"recipientId\");\n\n  useEffect(() => {\n    setSelectedDoctor(storedDoctorID || \"\");\n    setSelectedRecipient(storedRecipientID || \"\");\n  }, [storedDoctorID, storedRecipientID]);\n\n  const handleDateChange = (event) => {\n    setSelectedDate(event.target.value);\n  };\n\n  const handleTimeChange = (event) => {\n    setSelectedTime(event.target.value);\n  };\n\n  const handleVolumeChange = (event) => {\n    setSelectedVolume(event.target.value);\n  };\n\n  const handleBloodTypeChange = (event) => {\n    setSelectedBloodType(event.target.value);\n  };\n\n  const handleRecipientChange = (event) => {\n    setSelectedRecipient(event.target.value);\n  };\n\n  const scheduleTransfusionAppointment = () => {\n    if (\n      selectedDoctor.trim() !== \"\" &&\n      selectedRecipient.trim() !== \"\" &&\n      selectedDate.trim() !== \"\" &&\n      selectedTime.trim() !== \"\" &&\n      selectedVolume.trim() !== \"\" &&\n      selectedBloodType.trim() !== \"\"\n    ) {\n      const currentDate = new Date();\n      const selectedAppointmentDate = new Date(selectedDate);\n\n      // Check if the selected date is in the future\n      if (selectedAppointmentDate <= currentDate) {\n        alert(\"Please select a future date for the appointment.\");\n        return;\n      }\n\n      // Continue with scheduling if the date is in the future\n      const appointmentData = {\n        Medical_ID: selectedDoctor,\n        Recipient_ID: selectedRecipient,\n        Status: \"Scheduled\",\n        Transfusion_date: selectedDate,\n        Transfusion_time: selectedTime,\n        Volume: selectedVolume,\n        Type: selectedBloodType,\n      };\n      console.log(appointmentData);\n      fetch(\"http://localhost:3000/schedule-transfusion-appointment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(appointmentData),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n          return response.json();\n        })\n        .then((data) => {\n          const appointmentID =\n            data && data.Transfusion_ID;\n          console.log(data);\n          if (appointmentID) {\n            setSelectedAppointmentID(appointmentID);\n            setAppointments((prevAppointments) => [\n              ...prevAppointments,\n              {\n                Appointment_ID: appointmentID,\n                Medical_ID: selectedDoctor,\n                Recipient_ID: selectedRecipient,\n                Status: \"Scheduled\",\n                Transfusion_date: selectedDate,\n                Transfusion_Time: selectedTime,\n                Volume: selectedVolume,\n                Type: selectedBloodType,\n              },\n            ]);\n\n            setSelectedDate(\"\");\n            setSelectedTime(\"\");\n            setSelectedVolume(\"\");\n            setSelectedBloodType(\"\");\n            setSelectedRecipient(\"\");\n\n            alert(\n              `Appointment scheduled successfully. Appointment ID: ${appointmentID}`\n            );\n          } else {\n            throw new Error(\"Appointment ID not found in the response data\");\n          }\n        })\n        .catch((error) => {\n          console.error(\n            \"There was a problem with the fetch operation:\",\n            error\n          );\n          alert(\"Error scheduling appointment. Please try again later.\");\n        });\n    }\n  };\n\n  useEffect(() => {\n    // Fetch appointment data when the component mounts\n    fetchAppointments();\n  }, []);\n\n  const fetchAppointments = async () => {\n    try {\n      // Fetch appointments for the specific user\n      const response = await fetch(\n        `http://localhost:3000/get-transfusion-appointments/${selectedDoctor}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error(\"Error fetching appointments:\", error);\n    }\n  };\n\n  const handleRefresh = () => {\n    // Fetch appointment data when the refresh button is clicked\n    fetchAppointments();\n  };\n\n  return (\n    <div className=\"transfusion-appt-container\">\n      <header>\n        <h1>Transfusion Appointment</h1>\n      </header>\n      <div className=\"recipient-selection-container\">\n        <p>Enter the recipient ID:</p>\n        <input\n          type=\"text\"\n          value={selectedRecipient}\n          onChange={handleRecipientChange}\n          className=\"recipient-picker\"\n        />\n      </div>\n      <div className=\"date-selection-container\">\n        <p>Select a date for the transfusion appointment:</p>\n        <input\n          type=\"date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          className=\"date-picker\"\n        />\n      </div>\n      <div className=\"time-selection-container\">\n        <p>Select a time for the transfusion appointment:</p>\n        <input\n          type=\"time\"\n          value={selectedTime}\n          onChange={handleTimeChange}\n          className=\"time-picker\"\n        />\n      </div>\n      <div className=\"volume-selection-container\">\n        <p>Volume needed for transfusion in mL:</p>\n        <input\n          type=\"text\"\n          value={selectedVolume}\n          onChange={handleVolumeChange}\n          className=\"volume-picker\"\n        />\n      </div>\n      <div className=\"blood-type-selection-container\">\n        <p>Blood type:</p>\n        <input\n          type=\"text\"\n          value={selectedBloodType}\n          onChange={handleBloodTypeChange}\n          className=\"blood-type-picker\"\n        />\n      </div>\n      <button\n        disabled={\n          selectedDoctor.trim() === \"\" ||\n          selectedRecipient.trim() === \"\" ||\n          selectedDate.trim() === \"\" ||\n          selectedTime.trim() === \"\" ||\n          selectedVolume.trim() === \"\" ||\n          selectedBloodType.trim() === \"\"\n        }\n        onClick={scheduleTransfusionAppointment}\n      >\n        Schedule Transfusion Appointment\n      </button>\n      <div className=\"appointments-container\">\n        <table>\n          <thead>\n            <tr>\n              <th colSpan=\"3\">Transfusion Appointments</th>\n              <th>\n                <button\n                  className=\"refresh-button\"\n                  onClick={handleRefresh}\n                  style={{ width: \"100%\" }}\n                >\n                  Refresh\n                </button>\n              </th>\n            </tr>\n          </thead>\n        </table>\n        <table>\n          <thead>\n            <tr>\n              <th>Appointment ID</th>\n              <th>Status</th>\n              <th>Appointment Date</th>\n              <th>Appointment Time</th>\n              <th>Volume</th>\n              <th>Blood Type</th>\n            </tr>\n          </thead>\n          <tbody>\n            {appointments.map((appointment) => (\n              <tr key={appointment.Appointment_ID}>\n                <td>{appointment.Appointment_ID}</td>\n                <td>{appointment.Status}</td>\n                <td>{appointment.Transfusion_date.split(\"T\")[0]}</td>\n                <td>{appointment.Transfusion_time}</td>\n                <td>{appointment.Volume}</td>\n                <td>{appointment.Type}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default TransfusionAppt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}