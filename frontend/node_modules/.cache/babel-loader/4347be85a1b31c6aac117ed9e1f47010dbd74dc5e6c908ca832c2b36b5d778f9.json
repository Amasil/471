{"ast":null,"code":"var _jsxFileName = \"/Users/zainabwaseem/Documents/GitHub/471/frontend/src/DoctorFeedback.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./DoctorFeedback.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorFeedback = () => {\n  _s();\n  const [feedbackList, setFeedbackList] = useState([]);\n  useEffect(() => {\n    // Fetch feedback data when the component mounts\n    fetchFeedback();\n  }, []);\n  const fetchFeedback = () => {\n    // Make a GET request to fetch all feedback\n    fetch(\"http://localhost:3000/get-feedback\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      setFeedbackList(data);\n    }).catch(error => {\n      console.error(\"There was a problem with the fetch operation:\", error);\n      // Handle error or provide user feedback\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Doctor Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: feedbackList.map(feedback => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: feedback.Rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: feedback.Feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, feedback.Feedback_ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorFeedback, \"1WvYOalehy0CqrnKrC8WdVH0LVY=\");\n_c = DoctorFeedback;\nexport default DoctorFeedback;\nvar _c;\n$RefreshReg$(_c, \"DoctorFeedback\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DoctorFeedback","_s","feedbackList","setFeedbackList","fetchFeedback","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","feedback","Rating","Feedback","Feedback_ID","_c","$RefreshReg$"],"sources":["/Users/zainabwaseem/Documents/GitHub/471/frontend/src/DoctorFeedback.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./DoctorFeedback.css\";\n\nconst DoctorFeedback = () => {\n  const [feedbackList, setFeedbackList] = useState([]);\n\n  useEffect(() => {\n    // Fetch feedback data when the component mounts\n    fetchFeedback();\n  }, []);\n\n  const fetchFeedback = () => {\n    // Make a GET request to fetch all feedback\n    fetch(\"http://localhost:3000/get-feedback\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setFeedbackList(data);\n      })\n      .catch((error) => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        // Handle error or provide user feedback\n      });\n  };\n\n  return (\n    <div className=\"doctor-feedback-container\">\n      <header>\n        <h1>Doctor Feedback</h1>\n      </header>\n      <div className=\"feedback-list\">\n        <h2>All Feedback</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Rating</th>\n              <th>Feedback</th>\n            </tr>\n          </thead>\n          <tbody>\n            {feedbackList.map((feedback) => (\n              <tr key={feedback.Feedback_ID}>\n                <td>{feedback.Rating}</td>\n                <td>{feedback.Feedback}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorFeedback;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}