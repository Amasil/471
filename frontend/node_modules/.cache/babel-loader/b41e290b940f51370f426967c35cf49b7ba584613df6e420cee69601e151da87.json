{"ast":null,"code":"var _jsxFileName = \"/Users/zainabwaseem/VS Code/471/frontend/src/Admin_Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Importing necessary dependencies and components\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AdminSidebar from \"./AdminSidebar.js\";\nimport \"./Admin_Dashboard.css\";\nimport Inventory from \"./Inventory.js\";\n\n// Function to update the favicon of the webpage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst updateFavicon = faviconURL => {\n  const favicon = document.querySelector('link[rel=\"icon\"]');\n  if (favicon) {\n    favicon.href = faviconURL;\n  } else {\n    const newFavicon = document.createElement(\"link\");\n    newFavicon.rel = \"icon\";\n    newFavicon.href = faviconURL;\n    document.head.appendChild(newFavicon);\n  }\n};\n\n// Function to update the webpage title\nconst updateWebpageTitle = title => {\n  document.title = title;\n};\n\n// Component for the dashboard home page\nconst DashboardHome = () => {\n  _s();\n  useEffect(() => {\n    // Update favicon and webpage title on component mount\n    updateFavicon(\"https://cdn.iconscout.com/icon/premium/png-512-thumb/admin-1-32-687612.png?f=webp&w=512\");\n    updateWebpageTitle(\"Admin Dashboard\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Admin Dashboard!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the homepage. You can navigate to other sections using the sidebar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// Component for managing users\n_s(DashboardHome, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DashboardHome;\nconst Users = () => {\n  _s2();\n  // State variables for managing user data and editing state\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newUserInfo, setNewUserInfo] = useState({\n    // Initial state for user information\n    User_ID: \"\",\n    First_Name: \"\",\n    Middle_Name: \"\",\n    Last_Name: \"\",\n    Username: \"\",\n    Password: \"\",\n    Email: \"\",\n    Phone_No: \"\",\n    Blood_Group: \"\",\n    Last_Donation_Date: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleteButtonDisabled, setIsDeleteButtonDisabled] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(false);\n\n  // Fetch all users from the server on component mount\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n      } catch (err) {\n        console.error(\"Error fetching users:\", err);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n\n  // Handler for selecting a user for editing\n  const handleUserSelect = userId => {\n    // Find the selected user from the user list\n    const selected = users.find(user => user.User_ID === userId);\n    setSelectedUser(selected);\n\n    // Set user information for editing\n    setNewUserInfo({\n      User_ID: selected.User_ID || \"\",\n      First_Name: selected.First_Name || \"\",\n      Middle_Name: selected.Middle_Name || \"\",\n      Last_Name: selected.Last_Name || \"\",\n      Username: selected.Username || \"\",\n      Password: selected.Password || \"\",\n      Email: selected.Email || \"\",\n      Phone_No: selected.Phone_No || \"\",\n      Blood_Group: selected.Blood_Group || \"\",\n      Last_Donation_Date: selected.Last_Donation_Date || \"\"\n    });\n\n    // Enable editing mode and update button states\n    setIsDeleteButtonDisabled(false);\n    setIsEditing(prevIsEditing => !prevIsEditing);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for updating user information\n  const handleChangeUserInfo = async () => {\n    const {\n      User_ID,\n      ...updatedInfo\n    } = newUserInfo;\n    try {\n      // Check if there are changes to update\n      if (JSON.stringify(updatedInfo) !== \"{}\") {\n        await axios.put(`http://localhost:3000/user`, newUserInfo);\n        console.log(\"User info updated successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Update selected user information\n        const updatedSelectedUser = res.data.find(user => user.User_ID === selectedUser.User_ID);\n        setSelectedUser(updatedSelectedUser);\n      } else {\n        console.log(\"No changes to update.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating user info:\", err);\n    }\n\n    // Disable editing mode and reset button states\n    setIsEditing(false);\n    setIsDeleteButtonDisabled(true);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for deleting a user and canceling the operation\n  const handleDeleteUserAndCancel = async userId => {\n    // Display a confirmation pop-up\n    const userConfirmed = window.confirm(\"Are you sure you want to delete this user?\");\n    if (userConfirmed) {\n      try {\n        // Delete the user and set cancelClicked state\n        await handleDeleteUser(userId);\n        setCancelClicked(true);\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    }\n  };\n\n  // Handler for deleting a user\n  const handleDeleteUser = async () => {\n    try {\n      // Check if a user is selected for deletion\n      if (selectedUser && selectedUser.User_ID) {\n        // Display a confirmation pop-up\n        const userConfirmed = window.confirm(\"Are you sure you want to delete this user?\");\n        if (userConfirmed) {\n          // If user confirms, proceed with deletion\n          await axios.delete(\"http://localhost:3000/user\", {\n            data: {\n              User_ID: selectedUser.User_ID\n            }\n          });\n          console.log(\"User deleted successfully!\");\n\n          // Fetch updated user list from the server\n          const res = await axios.get(\"http://localhost:3000/user\");\n          setUsers(res.data);\n\n          // Reset selected user and user information\n          setSelectedUser(null);\n          setNewUserInfo({\n            User_ID: \"\",\n            First_Name: \"\",\n            Middle_Name: \"\",\n            Last_Name: \"\",\n            Username: \"\",\n            Password: \"\",\n            Email: \"\",\n            Phone_No: \"\",\n            Blood_Group: \"\",\n            Last_Donation_Date: \"\"\n          });\n\n          // Disable editing mode and reset button states\n          setIsEditing(false);\n          setIsDeleteButtonDisabled(true);\n        }\n      } else {\n        console.log(\"No user selected to delete.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n    }\n  };\n\n  // Rendering UI for user management\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.User_ID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.First_Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.Last_Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUserSelect(user.User_ID),\n                  children: isEditing && selectedUser && selectedUser.User_ID === user.User_ID ? \"Cancel\" : \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this), isEditing && selectedUser && selectedUser.User_ID === user.User_ID && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteUserAndCancel(user.User_ID),\n                  disabled: isDeleteButtonDisabled || cancelClicked,\n                  className: \"delete-button\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), isEditing && selectedUser && selectedUser.User_ID === user.User_ID && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Edit User Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleChangeUserInfo,\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setIsEditing(false); // Stop editing mode\n                      setIsDeleteButtonDisabled(false); // Disable delete button\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this)]\n          }, user.User_ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n// Main component for the admin dashboard\n_s2(Users, \"cESVfhFfsmOhNw86Ce/dtLY3qXI=\");\n_c2 = Users;\nconst Admin_Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(DashboardHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users\",\n            element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/inventory\",\n            element: /*#__PURE__*/_jsxDEV(Inventory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the Admin_Dashboard component as the default export\n_c3 = Admin_Dashboard;\nexport default Admin_Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DashboardHome\");\n$RefreshReg$(_c2, \"Users\");\n$RefreshReg$(_c3, \"Admin_Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","axios","AdminSidebar","Inventory","jsxDEV","_jsxDEV","updateFavicon","faviconURL","favicon","document","querySelector","href","newFavicon","createElement","rel","head","appendChild","updateWebpageTitle","title","DashboardHome","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Users","_s2","users","setUsers","selectedUser","setSelectedUser","newUserInfo","setNewUserInfo","User_ID","First_Name","Middle_Name","Last_Name","Username","Password","Email","Phone_No","Blood_Group","Last_Donation_Date","isEditing","setIsEditing","isDeleteButtonDisabled","setIsDeleteButtonDisabled","cancelClicked","setCancelClicked","fetchAllUsers","res","get","data","err","console","error","handleUserSelect","userId","selected","find","user","prevIsEditing","handleChangeUserInfo","updatedInfo","JSON","stringify","put","log","updatedSelectedUser","handleDeleteUserAndCancel","userConfirmed","window","confirm","handleDeleteUser","delete","className","map","Fragment","onClick","disabled","colSpan","_c2","Admin_Dashboard","path","element","_c3","$RefreshReg$"],"sources":["/Users/zainabwaseem/VS Code/471/frontend/src/Admin_Dashboard.js"],"sourcesContent":["// Importing necessary dependencies and components\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AdminSidebar from \"./AdminSidebar.js\";\nimport \"./Admin_Dashboard.css\";\nimport Inventory from \"./Inventory.js\";\n\n// Function to update the favicon of the webpage\nconst updateFavicon = (faviconURL) => {\n  const favicon = document.querySelector('link[rel=\"icon\"]');\n  if (favicon) {\n    favicon.href = faviconURL;\n  } else {\n    const newFavicon = document.createElement(\"link\");\n    newFavicon.rel = \"icon\";\n    newFavicon.href = faviconURL;\n    document.head.appendChild(newFavicon);\n  }\n};\n\n// Function to update the webpage title\nconst updateWebpageTitle = (title) => {\n  document.title = title;\n};\n\n// Component for the dashboard home page\nconst DashboardHome = () => {\n  useEffect(() => {\n    // Update favicon and webpage title on component mount\n    updateFavicon(\n      \"https://cdn.iconscout.com/icon/premium/png-512-thumb/admin-1-32-687612.png?f=webp&w=512\"\n    );\n    updateWebpageTitle(\"Admin Dashboard\");\n  }, []);\n\n  return (\n    <div>\n      <h2>Welcome to the Admin Dashboard!</h2>\n      <p>\n        This is the homepage. You can navigate to other sections using the\n        sidebar.\n      </p>\n    </div>\n  );\n};\n\n// Component for managing users\nconst Users = () => {\n  // State variables for managing user data and editing state\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newUserInfo, setNewUserInfo] = useState({\n    // Initial state for user information\n    User_ID: \"\",\n    First_Name: \"\",\n    Middle_Name: \"\",\n    Last_Name: \"\",\n    Username: \"\",\n    Password: \"\",\n    Email: \"\",\n    Phone_No: \"\",\n    Blood_Group: \"\",\n    Last_Donation_Date: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleteButtonDisabled, setIsDeleteButtonDisabled] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(false);\n\n  // Fetch all users from the server on component mount\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n      } catch (err) {\n        console.error(\"Error fetching users:\", err);\n      }\n    };\n\n    fetchAllUsers();\n  }, []);\n\n  // Handler for selecting a user for editing\n  const handleUserSelect = (userId) => {\n    // Find the selected user from the user list\n    const selected = users.find((user) => user.User_ID === userId);\n    setSelectedUser(selected);\n\n    // Set user information for editing\n    setNewUserInfo({\n      User_ID: selected.User_ID || \"\",\n      First_Name: selected.First_Name || \"\",\n      Middle_Name: selected.Middle_Name || \"\",\n      Last_Name: selected.Last_Name || \"\",\n      Username: selected.Username || \"\",\n      Password: selected.Password || \"\",\n      Email: selected.Email || \"\",\n      Phone_No: selected.Phone_No || \"\",\n      Blood_Group: selected.Blood_Group || \"\",\n      Last_Donation_Date: selected.Last_Donation_Date || \"\",\n    });\n\n    // Enable editing mode and update button states\n    setIsDeleteButtonDisabled(false);\n    setIsEditing((prevIsEditing) => !prevIsEditing);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for updating user information\n  const handleChangeUserInfo = async () => {\n    const { User_ID, ...updatedInfo } = newUserInfo;\n\n    try {\n      // Check if there are changes to update\n      if (JSON.stringify(updatedInfo) !== \"{}\") {\n        await axios.put(`http://localhost:3000/user`, newUserInfo);\n        console.log(\"User info updated successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Update selected user information\n        const updatedSelectedUser = res.data.find(\n          (user) => user.User_ID === selectedUser.User_ID\n        );\n        setSelectedUser(updatedSelectedUser);\n      } else {\n        console.log(\"No changes to update.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating user info:\", err);\n    }\n\n    // Disable editing mode and reset button states\n    setIsEditing(false);\n    setIsDeleteButtonDisabled(true);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for deleting a user and canceling the operation\nconst handleDeleteUserAndCancel = async (userId) => {\n  // Display a confirmation pop-up\n  const userConfirmed = window.confirm(\"Are you sure you want to delete this user?\");\n  \n  if (userConfirmed) {\n    try {\n      // Delete the user and set cancelClicked state\n      await handleDeleteUser(userId);\n      setCancelClicked(true);\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  }\n};\n\n// Handler for deleting a user\nconst handleDeleteUser = async () => {\n  try {\n    // Check if a user is selected for deletion\n    if (selectedUser && selectedUser.User_ID) {\n      // Display a confirmation pop-up\n      const userConfirmed = window.confirm(\"Are you sure you want to delete this user?\");\n      \n      if (userConfirmed) {\n        // If user confirms, proceed with deletion\n        await axios.delete(\"http://localhost:3000/user\", {\n          data: { User_ID: selectedUser.User_ID },\n        });\n\n        console.log(\"User deleted successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Reset selected user and user information\n        setSelectedUser(null);\n        setNewUserInfo({\n          User_ID: \"\",\n          First_Name: \"\",\n          Middle_Name: \"\",\n          Last_Name: \"\",\n          Username: \"\",\n          Password: \"\",\n          Email: \"\",\n          Phone_No: \"\",\n          Blood_Group: \"\",\n          Last_Donation_Date: \"\",\n        });\n\n        // Disable editing mode and reset button states\n        setIsEditing(false);\n        setIsDeleteButtonDisabled(true);\n      }\n    } else {\n      console.log(\"No user selected to delete.\");\n    }\n  } catch (err) {\n    console.error(\"Error deleting user:\", err);\n  }\n};\n\n  // Rendering UI for user management\n  return (\n    <div className=\"admin-dashboard\">\n      <div className=\"users-container\">\n        <h1>User List</h1>\n        <table className=\"user-table\">\n          <thead>\n            <tr>\n              <th>User ID</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Mapping through the list of users and rendering rows */}\n            {users.map((user) => (\n              <React.Fragment key={user.User_ID}>\n                <tr>\n                  <td>{user.User_ID}</td>\n                  <td>{user.First_Name}</td>\n                  <td>{user.Last_Name}</td>\n                  <td>\n                    <button onClick={() => handleUserSelect(user.User_ID)}>\n                      {/* Display \"Cancel\" or \"Edit\" based on editing state */}\n                      {isEditing &&\n                      selectedUser &&\n                      selectedUser.User_ID === user.User_ID\n                        ? \"Cancel\"\n                        : \"Edit\"}\n                    </button>\n                    {/* Display delete button during editing mode */}\n                    {isEditing &&\n                      selectedUser &&\n                      selectedUser.User_ID === user.User_ID && (\n                        <button\n                          onClick={() =>\n                            handleDeleteUserAndCancel(user.User_ID)\n                          }\n                          disabled={isDeleteButtonDisabled || cancelClicked}\n                          className=\"delete-button\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                  </td>\n                </tr>\n                {/* Display additional row for editing user information */}\n                {isEditing &&\n                  selectedUser &&\n                  selectedUser.User_ID === user.User_ID && (\n                    <tr>\n                      <td colSpan=\"4\">\n                        <div>\n                          <h2>Edit User Information</h2>\n                          {/* Input fields for editing user information */}\n                          {/* ... (omitted for brevity) ... */}\n                          <button onClick={handleChangeUserInfo}>\n                            Save Changes\n                          </button>\n                          {/* Button to cancel editing */}\n                          <button\n                            onClick={() => {\n                              setIsEditing(false); // Stop editing mode\n                              setIsDeleteButtonDisabled(false); // Disable delete button\n                            }}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  )}\n              </React.Fragment>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\n// Main component for the admin dashboard\nconst Admin_Dashboard = () => {\n  return (\n    <div className=\"admin-navbar\">\n      <div className=\"admin-dashboard\">\n        {/* Render the admin sidebar */}\n        <AdminSidebar />\n        <div className=\"admin-content\">\n          {/* Define routes for different sections of the admin dashboard */}\n          <Routes>\n            <Route path=\"/\" element={<DashboardHome />} />\n            <Route path=\"/users\" element={<Users />} />\n            <Route path=\"/inventory\" element={<Inventory />} />\n            {/* Add other routes for inventory or additional features */}\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Export the Admin_Dashboard component as the default export\nexport default Admin_Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}