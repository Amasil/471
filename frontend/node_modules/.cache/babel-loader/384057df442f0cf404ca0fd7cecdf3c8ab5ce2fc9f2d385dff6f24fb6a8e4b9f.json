{"ast":null,"code":"var _jsxFileName = \"/Users/amasil/Downloads/471/frontend/src/RecipientTransfusion.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipientAppointments = () => {\n  _s();\n  const [transfusions, setTransfusions] = useState([]);\n  const [recipientId, setRecipientId] = useState(\"\");\n  useEffect(() => {\n    fetchRecipientAppointments();\n  }, [recipientId]);\n  const fetchRecipientAppointments = async () => {\n    try {\n      // Get appointments for the recipient\n      const response = await fetch(`http://localhost:3000/get-recipient-appointments/${recipientId}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setTransfusions(data);\n    } catch (error) {\n      console.error(\"Error fetching recipient's transfusions:\", error);\n    }\n  };\n  const handleRefresh = () => {\n    // Manually trigger a refresh by calling fetchRecipientAppointments\n    fetchRecipientAppointments();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipient-transfusions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Transfusion Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfusions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        className: \"refresh-button\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transfusion ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transfusion Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transfusion Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Blood Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transfusions.map(transfusion => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transfusion.Transfusion_ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transfusion.Transfusion_Date.split(\"T\")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transfusion.Transfusion_Time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transfusion.Volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transfusion.Blood_Type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, transfusion.Transfusion_ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipientAppointments, \"+qJmQVpoLOMYP84HoWB1Dbpj0go=\");\n_c = RecipientAppointments;\nexport default RecipientAppointments;\nvar _c;\n$RefreshReg$(_c, \"RecipientAppointments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RecipientAppointments","_s","transfusions","setTransfusions","recipientId","setRecipientId","fetchRecipientAppointments","response","fetch","ok","Error","data","json","error","console","handleRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","transfusion","Transfusion_ID","Transfusion_Date","split","Transfusion_Time","Volume","Blood_Type","_c","$RefreshReg$"],"sources":["/Users/amasil/Downloads/471/frontend/src/RecipientTransfusion.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst RecipientAppointments = () => {\n  const [transfusions, setTransfusions] = useState([]);\n  const [recipientId, setRecipientId] = useState(\"\");\n\n  useEffect(() => {\n    fetchRecipientAppointments();\n  }, [recipientId]);\n\n  const fetchRecipientAppointments = async () => {\n    try {\n      // Get appointments for the recipient\n      const response = await fetch(\n        `http://localhost:3000/get-recipient-appointments/${recipientId}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      setTransfusions(data);\n    } catch (error) {\n      console.error(\"Error fetching recipient's transfusions:\", error);\n    }\n  };\n\n  const handleRefresh = () => {\n    // Manually trigger a refresh by calling fetchRecipientAppointments\n    fetchRecipientAppointments();\n  };\n\n  return (\n    <div className=\"recipient-transfusions-container\">\n      <header>\n        <h1>Your Transfusion Appointments</h1>\n      </header>\n      <div className=\"transfusions-container\">\n        <button onClick={handleRefresh} className=\"refresh-button\">\n          Refresh\n        </button>\n        <table>\n          <thead>\n            <tr>\n              <th>Transfusion ID</th>\n              <th>Transfusion Date</th>\n              <th>Transfusion Time</th>\n              <th>Volume</th>\n              <th>Blood Type</th>\n            </tr>\n          </thead>\n          <tbody>\n            {transfusions.map((transfusion) => (\n              <tr key={transfusion.Transfusion_ID}>\n                <td>{transfusion.Transfusion_ID}</td>\n                <td>{transfusion.Transfusion_Date.split(\"T\")[0]}</td>\n                <td>{transfusion.Transfusion_Time}</td>\n                <td>{transfusion.Volume}</td>\n                <td>{transfusion.Blood_Type}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipientAppointments;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}