{"ast":null,"code":"var _jsxFileName = \"/Users/zainabwaseem/VS Code/471/frontend/src/Feedback.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Feedback.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = () => {\n  _s();\n  const [rating, setRating] = useState(0);\n  const [feedbackText, setFeedbackText] = useState(\"\");\n  const handleRatingChange = event => {\n    setRating(Number(event.target.value));\n  };\n  const submitFeedback = () => {\n    // Prepare the data to be sent to the server\n    const feedbackData = {\n      User_ID: 20,\n      // Replace with the actual user ID\n      Feedback_ID: new Date().getTime(),\n      // Use a unique identifier, e.g., timestamp\n      Feedback_Date: new Date().toISOString().split('T')[0],\n      // Format as 'YYYY-MM-DD'\n      Details: \"Additional details if needed\",\n      // Add details if applicable\n      Comment: feedbackText,\n      Rating: rating\n    };\n\n    // Make a POST request to the server\n    fetch(\"http://localhost:3000/submit-feedback\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(feedbackData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      alert(\"Your feedback has been recorded.\");\n      // You can also perform any additional actions after successful submission\n    }).catch(error => {\n      console.error(\"There was a problem with the fetch operation:\", error);\n      alert(\"There was an error submitting your feedback. Please try again later.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Rate us out of 5:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rating,\n        onChange: handleRatingChange,\n        className: \"rating-dropdown\",\n        children: [0, 1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"feedback-text\",\n      placeholder: \"Plese enter your feedback.\",\n      value: feedbackText,\n      onChange: e => setFeedbackText(e.target.value),\n      className: \"textarea-size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      //ensures button can only be pressed if feedback is present\n      disabled: rating === 0 || feedbackText.trim() === \"\",\n      onClick: submitFeedback,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Feedback, \"B0OS+nyY+8M9h2KaYJXTnwcWPC8=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Feedback","_s","rating","setRating","feedbackText","setFeedbackText","handleRatingChange","event","Number","target","value","submitFeedback","feedbackData","User_ID","Feedback_ID","Date","getTime","Feedback_Date","toISOString","split","Details","Comment","Rating","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","alert","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","id","placeholder","e","disabled","trim","onClick","_c","$RefreshReg$"],"sources":["/Users/zainabwaseem/VS Code/471/frontend/src/Feedback.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Feedback.css\";\n\nconst Feedback = () => {\n  const [rating, setRating] = useState(0);\n  const [feedbackText, setFeedbackText] = useState(\"\");\n\n  const handleRatingChange = (event) => {\n    setRating(Number(event.target.value));\n  };\n\n  const submitFeedback = () => {\n    // Prepare the data to be sent to the server\n    const feedbackData = {\n      User_ID: 20, // Replace with the actual user ID\n      Feedback_ID: new Date().getTime(), // Use a unique identifier, e.g., timestamp\n      Feedback_Date: new Date().toISOString().split('T')[0], // Format as 'YYYY-MM-DD'\n      Details: \"Additional details if needed\", // Add details if applicable\n      Comment: feedbackText,\n      Rating: rating,\n    };\n\n    // Make a POST request to the server\n    fetch(\"http://localhost:3000/submit-feedback\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(feedbackData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        alert(\"Your feedback has been recorded.\");\n        // You can also perform any additional actions after successful submission\n      })\n      .catch((error) => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        alert(\n          \"There was an error submitting your feedback. Please try again later.\"\n        );\n      });\n  };\n\n  return (\n    <div className=\"feedback-container\">\n      <header>\n        <h1>Feedback</h1>\n      </header>\n      <div className=\"rating-container\">\n        <p>Rate us out of 5:</p>\n        <select\n          value={rating}\n          onChange={handleRatingChange}\n          className=\"rating-dropdown\"\n        >\n          {[0, 1, 2, 3, 4, 5].map((value) => (\n            <option key={value} value={value}>\n              {value}\n            </option>\n          ))}\n        </select>\n      </div>\n      <textarea\n        id=\"feedback-text\"\n        placeholder=\"Plese enter your feedback.\"\n        value={feedbackText}\n        onChange={(e) => setFeedbackText(e.target.value)}\n        className=\"textarea-size\"\n      ></textarea>\n      <button //ensures button can only be pressed if feedback is present\n        disabled={rating === 0 || feedbackText.trim() === \"\"}\n        onClick={submitFeedback}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default Feedback;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}