{"ast":null,"code":"var _jsxFileName = \"/Users/zainabwaseem/VS Code/471/frontend/src/Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./dashboard.css\"; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [sendAlerts, setSendAlerts] = useState({\n    \"A+\": false,\n    \"A-\": false,\n    \"B+\": false,\n    \"B-\": false,\n    \"AB+\": false,\n    \"AB-\": false,\n    \"O+\": false,\n    \"O-\": false\n  });\n  const [editableQuantities, setEditableQuantities] = useState({\n    \"A+\": false,\n    \"A-\": false,\n    \"B+\": false,\n    \"B-\": false,\n    \"AB+\": false,\n    \"AB-\": false,\n    \"O+\": false,\n    \"O-\": false\n  });\n  const [quantities, setQuantities] = useState({\n    \"A+\": 50,\n    \"A-\": 25,\n    \"B+\": 40,\n    \"B-\": 15,\n    \"AB+\": 30,\n    \"AB-\": 10,\n    \"O+\": 35,\n    \"O-\": 20\n  });\n  const handleSendAlert = (bloodType, status) => {\n    if (status === \"Low\") {\n      setSendAlerts(prevSendAlerts => ({\n        ...prevSendAlerts,\n        [bloodType]: true\n      }));\n      alert(\"Alert sent!\");\n    }\n  };\n  const handleUpdateQuantity = bloodType => {\n    setEditableQuantities(prevEditableQuantities => ({\n      ...prevEditableQuantities,\n      [bloodType]: true\n    }));\n  };\n  const handleSaveQuantity = bloodType => {\n    setEditableQuantities(prevEditableQuantities => ({\n      ...prevEditableQuantities,\n      [bloodType]: false\n    }));\n\n    // Save logic - Update the state with the new quantity\n    setQuantities(prevQuantities => ({\n      ...prevQuantities,\n      [bloodType]: parseInt(prevQuantities[bloodType], 10) // Convert to integer if needed\n    }));\n\n    // If you have a server or database, you can send the updated quantity data here\n    // For example, you can use fetch or axios to make an API call to update the backend\n    // fetch('your-api-endpoint', {\n    //   method: 'PUT',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({\n    //     bloodType,\n    //     quantity: parseInt(prevQuantities[bloodType], 10),\n    //   }),\n    // })\n    //   .then((response) => response.json())\n    //   .then((data) => console.log(data))\n    //   .catch((error) => console.error('Error:', error));\n  };\n  const handleQuantityChange = (bloodType, event) => {\n    const updatedQuantities = {\n      ...quantities,\n      [bloodType]: parseInt(event.target.value, 10)\n    };\n    setQuantities(updatedQuantities);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Inventory Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Blood Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity (units)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Send Alert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(quantities).map(bloodType => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: bloodType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editableQuantities[bloodType] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: quantities[bloodType],\n                  onChange: e => handleQuantityChange(bloodType, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this) : quantities[bloodType]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Healthy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editableQuantities[bloodType] ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSaveQuantity(bloodType),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateQuantity(bloodType),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: sendAlerts[bloodType],\n                  onClick: () => handleSendAlert(bloodType, \"Low\"),\n                  children: \"Send Alert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, bloodType, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"qhmv4p4L0aWmcqBEqwdlgzBF1HM=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Inventory","_s","sendAlerts","setSendAlerts","editableQuantities","setEditableQuantities","quantities","setQuantities","handleSendAlert","bloodType","status","prevSendAlerts","alert","handleUpdateQuantity","prevEditableQuantities","handleSaveQuantity","prevQuantities","parseInt","handleQuantityChange","event","updatedQuantities","target","value","className","children","AdminSidebar","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","type","onChange","e","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/zainabwaseem/VS Code/471/frontend/src/Inventory.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./dashboard.css\"; // Assuming you have a CSS file for styling\n\nconst Inventory = () => {\n  const [sendAlerts, setSendAlerts] = useState({\n    \"A+\": false,\n    \"A-\": false,\n    \"B+\": false,\n    \"B-\": false,\n    \"AB+\": false,\n    \"AB-\": false,\n    \"O+\": false,\n    \"O-\": false,\n  });\n\n  const [editableQuantities, setEditableQuantities] = useState({\n    \"A+\": false,\n    \"A-\": false,\n    \"B+\": false,\n    \"B-\": false,\n    \"AB+\": false,\n    \"AB-\": false,\n    \"O+\": false,\n    \"O-\": false,\n  });\n\n  const [quantities, setQuantities] = useState({\n    \"A+\": 50,\n    \"A-\": 25,\n    \"B+\": 40,\n    \"B-\": 15,\n    \"AB+\": 30,\n    \"AB-\": 10,\n    \"O+\": 35,\n    \"O-\": 20,\n  });\n\n  const handleSendAlert = (bloodType, status) => {\n    if (status === \"Low\") {\n      setSendAlerts((prevSendAlerts) => ({\n        ...prevSendAlerts,\n        [bloodType]: true,\n      }));\n\n      alert(\"Alert sent!\");\n    }\n  };\n\n  const handleUpdateQuantity = (bloodType) => {\n    setEditableQuantities((prevEditableQuantities) => ({\n      ...prevEditableQuantities,\n      [bloodType]: true,\n    }));\n  };\n\n  const handleSaveQuantity = (bloodType) => {\n    setEditableQuantities((prevEditableQuantities) => ({\n      ...prevEditableQuantities,\n      [bloodType]: false,\n    }));\n\n    // Save logic - Update the state with the new quantity\n    setQuantities((prevQuantities) => ({\n      ...prevQuantities,\n      [bloodType]: parseInt(prevQuantities[bloodType], 10), // Convert to integer if needed\n    }));\n\n    // If you have a server or database, you can send the updated quantity data here\n    // For example, you can use fetch or axios to make an API call to update the backend\n    // fetch('your-api-endpoint', {\n    //   method: 'PUT',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({\n    //     bloodType,\n    //     quantity: parseInt(prevQuantities[bloodType], 10),\n    //   }),\n    // })\n    //   .then((response) => response.json())\n    //   .then((data) => console.log(data))\n    //   .catch((error) => console.error('Error:', error));\n  };\n\n  const handleQuantityChange = (bloodType, event) => {\n    const updatedQuantities = { ...quantities, [bloodType]: parseInt(event.target.value, 10) };\n    setQuantities(updatedQuantities);\n  };\n\n  return (\n    <div className=\"admin-dashboard\">\n      <AdminSidebar />\n    <div>\n      <header>\n        <h1>Inventory Dashboard</h1>\n      </header>\n\n      <section>\n        <h2>Inventory</h2>\n\n        <table>\n          <thead>\n            <tr>\n              <th>Blood Type</th>\n              <th>Quantity (units)</th>\n              <th>Status</th>\n              <th>Update</th>\n              <th>Send Alert</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(quantities).map((bloodType) => (\n              <tr key={bloodType}>\n                <td>{bloodType}</td>\n                <td>\n                  {editableQuantities[bloodType] ? (\n                    <input\n                      type=\"text\"\n                      value={quantities[bloodType]}\n                      onChange={(e) => handleQuantityChange(bloodType, e)}\n                    />\n                  ) : (\n                    quantities[bloodType]\n                  )}\n                </td>\n                <td>Healthy</td>\n                <td>\n                  {editableQuantities[bloodType] ? (\n                    <button onClick={() => handleSaveQuantity(bloodType)}>Save</button>\n                  ) : (\n                    <button onClick={() => handleUpdateQuantity(bloodType)}>Update</button>\n                  )}\n                </td>\n                <td>\n                  <button\n                    disabled={sendAlerts[bloodType]}\n                    onClick={() => handleSendAlert(bloodType, \"Low\")}\n                  >\n                    Send Alert\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    </div>\n    </div>\n  );\n};\n\nexport default Inventory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}