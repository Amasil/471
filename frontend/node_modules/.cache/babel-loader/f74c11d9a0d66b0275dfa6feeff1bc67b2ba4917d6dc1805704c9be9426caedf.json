{"ast":null,"code":"var _jsxFileName = \"/Users/amasil/Downloads/471/frontend/src/admin/AdminDashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Importing necessary dependencies and components\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AdminSidebar from \"./AdminSidebar.js\";\nimport \"./AdminDashboard.css\";\nimport Inventory from \"../Inventory.js\";\nimport CreateUser from \"../CreateUser.js\";\n// Function to update the favicon of the webpage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst updateFavicon = faviconURL => {\n  const favicon = document.querySelector('link[rel=\"icon\"]');\n  if (favicon) {\n    favicon.href = faviconURL;\n  } else {\n    const newFavicon = document.createElement(\"link\");\n    newFavicon.rel = \"icon\";\n    newFavicon.href = faviconURL;\n    document.head.appendChild(newFavicon);\n  }\n};\n\n// Function to update the webpage title\nconst updateWebpageTitle = title => {\n  document.title = title;\n};\n\n// Component for the dashboard home page\nconst DashboardHome = () => {\n  _s();\n  useEffect(() => {\n    // Update favicon and webpage title on component mount\n    updateFavicon(\"https://cdn.iconscout.com/icon/premium/png-512-thumb/admin-1-32-687612.png?f=webp&w=512\");\n    updateWebpageTitle(\"Admin Dashboard\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Admin Dashboard!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the homepage. You can navigate to other sections using the sidebar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// Component for managing users\n_s(DashboardHome, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DashboardHome;\nconst Users = () => {\n  _s2();\n  // State variables for managing user data and editing state\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newUserInfo, setNewUserInfo] = useState({\n    // Initial state for user information\n    User_ID: \"\",\n    First_Name: \"\",\n    Middle_Name: \"\",\n    Last_Name: \"\",\n    Username: \"\",\n    Password: \"\",\n    Email: \"\",\n    Phone_No: \"\",\n    Blood_Group: \"\",\n    Last_Donation_Date: \"\",\n    Degree: \"\",\n    Department_ID: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleteButtonDisabled, setIsDeleteButtonDisabled] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(false);\n\n  // Fetch all users from the server on component mount\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n      } catch (err) {\n        console.error(\"Error fetching users:\", err);\n      }\n    };\n    fetchAllUsers();\n  }, []);\n  const handleRefreshUsers = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3000/user\");\n      setUsers(res.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n    }\n  };\n\n  // Handler for selecting a user for editing\n  const handleUserSelect = userId => {\n    // Find the selected user from the user list\n    const selected = users.find(user => user.User_ID === userId);\n    setSelectedUser(selected);\n\n    // Set user information for editing\n    setNewUserInfo({\n      User_ID: selected.User_ID || \"\",\n      First_Name: selected.First_Name || \"\",\n      Middle_Name: selected.Middle_Name || \"\",\n      Last_Name: selected.Last_Name || \"\",\n      Username: selected.Username || \"\",\n      Password: \"\",\n      Email: selected.Email || \"\",\n      Phone_No: selected.Phone_No || \"\",\n      Blood_Group: selected.Blood_Group || \"\",\n      Last_Donation_Date: selected.Last_Donation_Date || \"\",\n      Degree: selected.Degree || \"\",\n      Department_ID: selected.Department_ID || \"\",\n      User_Type: selected.User_Type || \"\"\n    });\n\n    // Enable editing mode and update button states\n    setIsDeleteButtonDisabled(false);\n    setIsEditing(prevIsEditing => !prevIsEditing);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for updating user information\n  const handleChangeUserInfo = async () => {\n    const {\n      User_ID,\n      ...updatedInfo\n    } = newUserInfo;\n    try {\n      // Check if there are changes to update\n      if (JSON.stringify(updatedInfo) !== \"{}\") {\n        console.log(\"Updating user info...\");\n        console.log(\"Updated user info:\", JSON.stringify(updatedInfo));\n        // Include User_Type in the payload\n        const updatedInfoWithUserType = {\n          ...updatedInfo,\n          User_Type: newUserInfo.User_Type\n        };\n\n        // If the user type is \"Doctor,\" include Degree and Department_ID in the payload\n        const updatedInfoWithDoctorFields = newUserInfo.User_Type === \"Doctor\" ? {\n          ...updatedInfoWithUserType,\n          Degree: newUserInfo.Degree,\n          Department_ID: newUserInfo.Department_ID\n        } : updatedInfoWithUserType;\n        await axios.put(`http://localhost:3000/user/${User_ID}`, updatedInfoWithDoctorFields);\n        console.log(\"User info updated successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Update selected user information\n        const updatedSelectedUser = res.data.find(user => user.User_ID === selectedUser.User_ID);\n        setSelectedUser(updatedSelectedUser);\n      } else {\n        console.log(\"No changes to update.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating user info:\", err);\n    }\n\n    // Disable editing mode and reset button states\n    setIsEditing(false);\n    setIsDeleteButtonDisabled(true);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for deleting a user and canceling the operation\n  const handleDeleteUserAndCancel = userId => {\n    // Set cancelClicked state\n    setCancelClicked(true);\n\n    // Call handleDeleteUser function with userId\n    handleDeleteUser(userId);\n  };\n\n  // Handler for deleting a user\n  const handleDeleteUser = async () => {\n    try {\n      // Check if a user is selected for deletion\n      if (selectedUser && selectedUser.User_ID) {\n        const loggedInUserId = parseInt(localStorage.getItem(\"userId\"), 10);\n        // Check if the selected user is the same as the logged-in user\n        if (selectedUser.User_ID === loggedInUserId) {\n          // Display a message or perform some action to inform the user\n          window.alert(\"You cannot delete yourself!\");\n          return;\n        }\n\n        // Display a confirmation pop-up only if cancelClicked state is false\n        if (!cancelClicked) {\n          const userConfirmed = window.confirm(\"Are you sure you want to delete this user?\");\n          if (!userConfirmed) {\n            // If the user doesn't confirm, reset cancelClicked state and return\n            setCancelClicked(false);\n            return;\n          }\n        }\n\n        // If user confirms and the selected user is not the logged-in user, proceed with deletion\n        await axios.delete(\"http://localhost:3000/user\", {\n          data: {\n            User_ID: selectedUser.User_ID\n          }\n        });\n        console.log(\"User deleted successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Reset selected user and user information\n        setSelectedUser(null);\n        setNewUserInfo({\n          User_ID: \"\",\n          First_Name: \"\",\n          Middle_Name: \"\",\n          Last_Name: \"\",\n          Username: \"\",\n          Password: \"\",\n          Email: \"\",\n          Phone_No: \"\",\n          Blood_Group: \"\",\n          Last_Donation_Date: \"\",\n          Degree: \"\",\n          Department_ID: \"\"\n        });\n\n        // Disable editing mode and reset button states\n        setIsEditing(false);\n        setIsDeleteButtonDisabled(true);\n        setCancelClicked(false); // Reset cancelClicked state\n      } else {\n        console.log(\"No user selected to delete.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n    }\n  };\n\n  // Rendering UI for user management\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"refresh-button-table\",\n        border: \"0\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"11\",\n              children: \"User List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              className: \"action\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRefreshUsers,\n                className: \"refresh-button\",\n                style: {\n                  width: '100%'\n                },\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users found. Click the \\\"Refresh\\\" button to fetch users.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"id\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"first-name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"middle-name\",\n              children: \"Middle Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"last-name\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"phone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"blood-group\",\n              children: \"Blood Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"last-donation-date\",\n              children: \"Last Donation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"degree\",\n              children: \"Doctor Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"department-id\",\n              children: \"Doctor Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"user-type\",\n              children: \"User Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"id\",\n                children: user.User_ID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"first-name\",\n                children: user.First_Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"middle-name\",\n                children: user.Middle_Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"last-name\",\n                children: user.Last_Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"username\",\n                children: user.Username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"email\",\n                children: user.Email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"phone\",\n                children: user.Phone_No\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"blood-group\",\n                children: user.Blood_Group\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"last-donation-date\",\n                children: user.Last_Donation_Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"degree\",\n                children: user.Degree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"department-id\",\n                children: user.Department_ID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"user-type\",\n                children: user.User_Type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUserSelect(user.User_ID),\n                  children: isEditing && selectedUser && selectedUser.User_ID === user.User_ID ? \"Cancel\" : \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), isEditing && selectedUser && selectedUser.User_ID === user.User_ID && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"13\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Edit User Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.First_Name,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        First_Name: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Middle Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.Middle_Name,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Middle_Name: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.Last_Name,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Last_Name: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.Username,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Username: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.Password,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Password: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.Email,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Email: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Phone No:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: newUserInfo.Phone_No,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Phone_No: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Blood Group:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newUserInfo.Blood_Group,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Blood_Group: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 434,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"A+\",\n                        children: \"A+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"A-\",\n                        children: \"A-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"B+\",\n                        children: \"B+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"B-\",\n                        children: \"B-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"O+\",\n                        children: \"O+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"O-\",\n                        children: \"O-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"AB+\",\n                        children: \"AB+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"AB-\",\n                        children: \"AB-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Unknown\",\n                        children: \"Unknown\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Last Donation Date\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      value: newUserInfo.Last_Donation_Date || '',\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Last_Donation_Date: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Doctor Degree\", /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newUserInfo.Degree,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Degree: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 473,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"MD\",\n                        children: \"MD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"PhD\",\n                        children: \"PhD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Other\",\n                        children: \"Other\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Doctor Department ID\", /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newUserInfo.Department_ID,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        Department_ID: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 491,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1 - Cardiology\",\n                        children: \"Cardiology\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"2 - Neurology\",\n                        children: \"Neurology\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 493,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"3 - Orthopedics\",\n                        children: \"Orthopedics\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 494,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"4 - Radiology\",\n                        children: \"Radiology\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5 - Other\",\n                        children: \"Other\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"User Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newUserInfo.User_Type,\n                      onChange: e => setNewUserInfo({\n                        ...newUserInfo,\n                        User_Type: e.target.value\n                      }),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 511,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Donor\",\n                        children: \"Donor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Recipient\",\n                        children: \"Recipient\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Doctor\",\n                        children: \"Doctor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Recipient\",\n                        children: \"Recipient\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleChangeUserInfo,\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteUserAndCancel(user.User_ID),\n                    disabled: isDeleteButtonDisabled || cancelClicked,\n                    className: \"delete-button\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setIsEditing(false); // Stop editing mode\n                      setIsDeleteButtonDisabled(false); // Disable delete button\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 23\n            }, this)]\n          }, user.User_ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n\n// Main component for the admin dashboard\n_s2(Users, \"DVsc69SXD08PNMFo/3NEf5LiBnI=\");\n_c2 = Users;\nconst AdminDashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(DashboardHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users\",\n            element: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/inventory\",\n            element: /*#__PURE__*/_jsxDEV(Inventory, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/create-user\",\n            element: /*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 558,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the AdminDashboard component as the default export\n_c3 = AdminDashboard;\nexport default AdminDashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DashboardHome\");\n$RefreshReg$(_c2, \"Users\");\n$RefreshReg$(_c3, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","axios","AdminSidebar","Inventory","CreateUser","jsxDEV","_jsxDEV","updateFavicon","faviconURL","favicon","document","querySelector","href","newFavicon","createElement","rel","head","appendChild","updateWebpageTitle","title","DashboardHome","_s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Users","_s2","users","setUsers","selectedUser","setSelectedUser","newUserInfo","setNewUserInfo","User_ID","First_Name","Middle_Name","Last_Name","Username","Password","Email","Phone_No","Blood_Group","Last_Donation_Date","Degree","Department_ID","isEditing","setIsEditing","isDeleteButtonDisabled","setIsDeleteButtonDisabled","cancelClicked","setCancelClicked","fetchAllUsers","res","get","data","err","console","error","handleRefreshUsers","handleUserSelect","userId","selected","find","user","User_Type","prevIsEditing","handleChangeUserInfo","updatedInfo","JSON","stringify","log","updatedInfoWithUserType","updatedInfoWithDoctorFields","put","updatedSelectedUser","handleDeleteUserAndCancel","handleDeleteUser","loggedInUserId","parseInt","localStorage","getItem","window","alert","userConfirmed","confirm","delete","border","colSpan","onClick","style","width","length","map","Fragment","type","value","onChange","e","target","disabled","_c2","AdminDashboard","path","element","_c3","$RefreshReg$"],"sources":["/Users/amasil/Downloads/471/frontend/src/admin/AdminDashboard.js"],"sourcesContent":["// Importing necessary dependencies and components\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AdminSidebar from \"./AdminSidebar.js\";\nimport \"./AdminDashboard.css\";\nimport Inventory from \"../Inventory.js\";\nimport CreateUser from \"../CreateUser.js\";\n// Function to update the favicon of the webpage\nconst updateFavicon = (faviconURL) => {\n  const favicon = document.querySelector('link[rel=\"icon\"]');\n  if (favicon) {\n    favicon.href = faviconURL;\n  } else {\n    const newFavicon = document.createElement(\"link\");\n    newFavicon.rel = \"icon\";\n    newFavicon.href = faviconURL;\n    document.head.appendChild(newFavicon);\n  }\n};\n\n// Function to update the webpage title\nconst updateWebpageTitle = (title) => {\n  document.title = title;\n};\n\n// Component for the dashboard home page\nconst DashboardHome = () => {\n  useEffect(() => {\n    // Update favicon and webpage title on component mount\n    updateFavicon(\n      \"https://cdn.iconscout.com/icon/premium/png-512-thumb/admin-1-32-687612.png?f=webp&w=512\"\n    );\n    updateWebpageTitle(\"Admin Dashboard\");\n  }, []);\n\n  return (\n    <div className=\"mainContainer\">\n      <h2>Welcome to the Admin Dashboard!</h2>\n      <p>\n        This is the homepage. You can navigate to other sections using the\n        sidebar.\n      </p>\n    </div>\n  );\n};\n\n// Component for managing users\nconst Users = () => {\n  // State variables for managing user data and editing state\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newUserInfo, setNewUserInfo] = useState({\n    // Initial state for user information\n    User_ID: \"\",\n    First_Name: \"\",\n    Middle_Name: \"\",\n    Last_Name: \"\",\n    Username: \"\",\n    Password: \"\",\n    Email: \"\",\n    Phone_No: \"\",\n    Blood_Group: \"\",\n    Last_Donation_Date: \"\",\n    Degree: \"\",\n    Department_ID: \"\",\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDeleteButtonDisabled, setIsDeleteButtonDisabled] = useState(true);\n  const [cancelClicked, setCancelClicked] = useState(false);\n\n  // Fetch all users from the server on component mount\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n      } catch (err) {\n        console.error(\"Error fetching users:\", err);\n      }\n    };\n\n    fetchAllUsers();\n  }, []);\n\n  const handleRefreshUsers = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3000/user\");\n      setUsers(res.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n    }\n  };\n\n  // Handler for selecting a user for editing\n  const handleUserSelect = (userId) => {\n    // Find the selected user from the user list\n    const selected = users.find((user) => user.User_ID === userId);\n    setSelectedUser(selected);\n\n    // Set user information for editing\n    setNewUserInfo({\n      User_ID: selected.User_ID || \"\",\n      First_Name: selected.First_Name || \"\",\n      Middle_Name: selected.Middle_Name || \"\",\n      Last_Name: selected.Last_Name || \"\",\n      Username: selected.Username || \"\",\n      Password: \"\",\n      Email: selected.Email || \"\",\n      Phone_No: selected.Phone_No || \"\",\n      Blood_Group: selected.Blood_Group || \"\",\n      Last_Donation_Date: selected.Last_Donation_Date || \"\",\n      Degree: selected.Degree || \"\",\n      Department_ID: selected.Department_ID || \"\",\n      User_Type: selected.User_Type || \"\",\n    });\n\n    // Enable editing mode and update button states\n    setIsDeleteButtonDisabled(false);\n    setIsEditing((prevIsEditing) => !prevIsEditing);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for updating user information\n  const handleChangeUserInfo = async () => {\n    const { User_ID, ...updatedInfo } = newUserInfo;\n\n    try {\n      // Check if there are changes to update\n      if (JSON.stringify(updatedInfo) !== \"{}\") {\n        console.log(\"Updating user info...\");\n        console.log(\"Updated user info:\", JSON.stringify(updatedInfo));\n        // Include User_Type in the payload\n        const updatedInfoWithUserType = { ...updatedInfo, User_Type: newUserInfo.User_Type };\n\n        // If the user type is \"Doctor,\" include Degree and Department_ID in the payload\n        const updatedInfoWithDoctorFields =\n          newUserInfo.User_Type === \"Doctor\"\n            ? { ...updatedInfoWithUserType, Degree: newUserInfo.Degree, Department_ID: newUserInfo.Department_ID }\n            : updatedInfoWithUserType;\n\n        await axios.put(`http://localhost:3000/user/${User_ID}`, updatedInfoWithDoctorFields);\n        console.log(\"User info updated successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Update selected user information\n        const updatedSelectedUser = res.data.find(\n          (user) => user.User_ID === selectedUser.User_ID\n        );\n        setSelectedUser(updatedSelectedUser);\n      } else {\n        console.log(\"No changes to update.\");\n      }\n    } catch (err) {\n      console.error(\"Error updating user info:\", err);\n    }\n\n    // Disable editing mode and reset button states\n    setIsEditing(false);\n    setIsDeleteButtonDisabled(true);\n    setCancelClicked(false); // Reset cancelClicked state\n  };\n\n  // Handler for deleting a user and canceling the operation\n  const handleDeleteUserAndCancel = (userId) => {\n    // Set cancelClicked state\n    setCancelClicked(true);\n\n    // Call handleDeleteUser function with userId\n    handleDeleteUser(userId);\n  };\n\n\n  // Handler for deleting a user\n  const handleDeleteUser = async () => {\n    try {\n      // Check if a user is selected for deletion\n      if (selectedUser && selectedUser.User_ID) {\n        const loggedInUserId = parseInt(localStorage.getItem(\"userId\"), 10);\n        // Check if the selected user is the same as the logged-in user\n        if (selectedUser.User_ID === loggedInUserId) {\n          // Display a message or perform some action to inform the user\n          window.alert(\"You cannot delete yourself!\");\n          return;\n        }\n\n        // Display a confirmation pop-up only if cancelClicked state is false\n        if (!cancelClicked) {\n          const userConfirmed = window.confirm(\n            \"Are you sure you want to delete this user?\"\n          );\n\n          if (!userConfirmed) {\n            // If the user doesn't confirm, reset cancelClicked state and return\n            setCancelClicked(false);\n            return;\n          }\n        }\n\n        // If user confirms and the selected user is not the logged-in user, proceed with deletion\n        await axios.delete(\"http://localhost:3000/user\", {\n          data: { User_ID: selectedUser.User_ID },\n        });\n\n        console.log(\"User deleted successfully!\");\n\n        // Fetch updated user list from the server\n        const res = await axios.get(\"http://localhost:3000/user\");\n        setUsers(res.data);\n\n        // Reset selected user and user information\n        setSelectedUser(null);\n        setNewUserInfo({\n          User_ID: \"\",\n          First_Name: \"\",\n          Middle_Name: \"\",\n          Last_Name: \"\",\n          Username: \"\",\n          Password: \"\",\n          Email: \"\",\n          Phone_No: \"\",\n          Blood_Group: \"\",\n          Last_Donation_Date: \"\",\n          Degree: \"\",\n          Department_ID: \"\",\n        });\n\n        // Disable editing mode and reset button states\n        setIsEditing(false);\n        setIsDeleteButtonDisabled(true);\n        setCancelClicked(false); // Reset cancelClicked state\n      } else {\n        console.log(\"No user selected to delete.\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n    }\n  };\n\n\n\n\n  // Rendering UI for user management\n  return (\n    <div className=\"admin-dashboard\">\n      <div className=\"users-container\">\n        <table className=\"refresh-button-table\" border=\"0\">\n          <tbody>\n            {/* Empty rows */}\n            <tr>\n              <td colSpan=\"11\">User List</td>\n              <td colSpan=\"2\" className=\"action\">\n                <button onClick={handleRefreshUsers} className=\"refresh-button\" style={{ width: '100%' }}>\n                  Refresh\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        {users.length === 0 ? (\n          <div>\n            <p>No users found. Click the \"Refresh\" button to fetch users.</p>\n          </div>\n        ) : (\n          <table className=\"user-table\">\n            <thead>\n              <tr>\n                <th className=\"id\">User ID</th>\n                <th className=\"first-name\">First Name</th>\n                <th className=\"middle-name\">Middle Name</th>\n                <th className=\"last-name\">Last Name</th>\n                <th className=\"username\">Username</th>\n                <th className=\"email\">Email</th>\n                <th className=\"phone\">Phone</th>\n                <th className=\"blood-group\">Blood Group</th>\n                <th className=\"last-donation-date\">Last Donation Date</th>\n                <th className=\"degree\">Doctor Degree</th>\n                <th className=\"department-id\">Doctor Department</th>\n                <th className=\"user-type\">User Type</th>\n                <th className=\"action\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* Mapping through the list of users and rendering rows */}\n              {users.map((user) => (\n                <React.Fragment key={user.User_ID}>\n                  <tr>\n                    <td className=\"id\">{user.User_ID}</td>\n                    <td className=\"first-name\">{user.First_Name}</td>\n                    <td className=\"middle-name\">{user.Middle_Name}</td>\n                    <td className=\"last-name\">{user.Last_Name}</td>\n                    <td className=\"username\">{user.Username}</td>\n                    <td className=\"email\">{user.Email}</td>\n                    <td className=\"phone\">{user.Phone_No}</td>\n                    <td className=\"blood-group\">{user.Blood_Group}</td>\n                    <td className=\"last-donation-date\">\n                      {user.Last_Donation_Date}\n                    </td>\n                    <td className=\"degree\">{user.Degree}</td>\n                    <td className=\"department-id\">{user.Department_ID}</td>\n                    <td className=\"user-type\">{user.User_Type}</td>\n                    <td className=\"action\">\n                      {/* Button to select a user for editing */}\n                      <button onClick={() => handleUserSelect(user.User_ID)}>\n                        {/* Display \"Cancel\" or \"Edit\" based on editing state */}\n                        {isEditing &&\n                          selectedUser &&\n                          selectedUser.User_ID === user.User_ID\n                          ? \"Cancel\"\n                          : \"Edit\"}\n                      </button>\n                    </td>\n                  </tr>\n                  {/* Display additional row for editing user information */}\n                  {isEditing &&\n                    selectedUser &&\n                    selectedUser.User_ID === user.User_ID && (\n                      <tr>\n                        <td colSpan=\"13\">\n                          <div>\n                            <h2>Edit User Information</h2>\n                            {/* Input fields for editing user information */}\n                            <label>\n                              First Name:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.First_Name}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    First_Name: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <label>\n                              Middle Name:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.Middle_Name}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Middle_Name: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Last Name:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.Last_Name}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Last_Name: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Username:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.Username}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Username: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Password:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.Password}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Password: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Email:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.Email}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Email: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Phone No:\n                              <input\n                                type=\"text\"\n                                value={newUserInfo.Phone_No}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Phone_No: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Blood Group:\n                              <select\n                                value={newUserInfo.Blood_Group}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Blood_Group: e.target.value,\n                                  })\n                                }\n                              >\n                                <option value=\"\">Select</option>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A-\">A-</option>\n                                <option value=\"B+\">B+</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"O+\">O+</option>\n                                <option value=\"O-\">O-</option>\n                                <option value=\"AB+\">AB+</option>\n                                <option value=\"AB-\">AB-</option>\n                                <option value=\"Unknown\">Unknown</option>\n                              </select>\n                            </label>\n\n                            <br />\n                            <label>\n                              Last Donation Date\n                              <input\n                                type=\"date\"\n                                value={newUserInfo.Last_Donation_Date || ''}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Last_Donation_Date: e.target.value,\n                                  })\n                                }\n                              />\n                            </label>\n                            <br />\n                            <label>\n                              Doctor Degree\n                              <select\n                                value={newUserInfo.Degree}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Degree: e.target.value,\n                                  })\n                                }\n                              >\n                                <option value=\"\">Select</option>\n                                <option value=\"MD\">MD</option>\n                                <option value=\"PhD\">PhD</option>\n                                <option value=\"Other\">Other</option>\n                              </select>\n                            </label>\n                            <br />\n                            <label>\n                              Doctor Department ID\n                              <select\n                                value={newUserInfo.Department_ID}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    Department_ID: e.target.value,\n                                  })\n                                }\n                              >\n                                <option value=\"\">Select</option>\n                                <option value=\"1 - Cardiology\">Cardiology</option>\n                                <option value=\"2 - Neurology\">Neurology</option>\n                                <option value=\"3 - Orthopedics\">Orthopedics</option>\n                                <option value=\"4 - Radiology\">Radiology</option>\n                                <option value=\"5 - Other\">Other</option>\n                              </select>\n                            </label>\n                            <br />\n                            <label>\n                              User Type:\n                              <select\n                                value={newUserInfo.User_Type}\n                                onChange={(e) =>\n                                  setNewUserInfo({\n                                    ...newUserInfo,\n                                    User_Type: e.target.value,\n                                  })\n                                }\n                              >\n                                <option value=\"\">Select</option>\n                                <option value=\"Donor\">Donor</option>\n                                <option value=\"Recipient\">Recipient</option>\n                                <option value=\"Doctor\">Doctor</option>\n                                <option value=\"Recipient\">Recipient</option>\n                              </select>\n                            </label>\n\n                            <br />\n                            <button onClick={handleChangeUserInfo}>\n                              Save Changes\n                            </button>\n                            <button\n                              onClick={() =>\n                                handleDeleteUserAndCancel(user.User_ID)\n                              }\n                              disabled={isDeleteButtonDisabled || cancelClicked}\n                              className=\"delete-button\"\n                            >\n                              Delete\n                            </button>\n                            {/* Button to cancel editing */}\n                            <button\n                              onClick={() => {\n                                setIsEditing(false); // Stop editing mode\n                                setIsDeleteButtonDisabled(false); // Disable delete button\n                              }}\n                            >\n                              Cancel\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Main component for the admin dashboard\nconst AdminDashboard = () => {\n  return (\n    <div className=\"admin-navbar\">\n      <div className=\"admin-dashboard\">\n        {/* Render the admin sidebar */}\n        <AdminSidebar />\n        <div className=\"admin-content\">\n          <Routes>\n            <Route path=\"/\" element={<DashboardHome />} />\n            <Route path=\"/users\" element={<Users />} />\n            <Route path=\"/inventory\" element={<Inventory />} />\n            <Route path=\"/create-user\" element={<CreateUser />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Export the AdminDashboard component as the default export\nexport default AdminDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}